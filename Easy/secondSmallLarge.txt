#include <bits/stdc++.h>
using namespace std;
void brute(int arr[], int n) { //O(Nlogn) , O(1)
    sort(arr, arr+n);
    int smallest=arr[0];
    int secondSmallest=0;
    int largest=arr[n-1];
    int secondLargest=0;
    for(int i=1; i<n; i++) {
        if(arr[i]!=smallest) {
            secondSmallest=arr[i];
            break;
        }
    }
    for(int i=n-2; i>=1; i--) {
        if(arr[i]!=largest) {
            secondLargest=arr[i];
            break;
        }
    }
    cout << secondLargest << " " << secondSmallest << endl;
}
void better(int arr[], int n) { //O(2N) , O(1) {Two linear traversals}
    int largest=INT_MIN;
    int secondLargest=INT_MIN;
    int smallest=INT_MAX;
    int secondSmallest=INT_MAX;
    for(int i=0; i<n; i++) {
        if(arr[i]>largest) largest=arr[i];
        if(arr[i]<smallest) smallest=arr[i];
    }
    for(int i=0; i<n; i++) {
        if(arr[i]>secondLargest && arr[i]!=largest) secondLargest=arr[i];
        if(arr[i]<secondSmallest && arr[i]!=smallest) secondSmallest=arr[i];
    }
    cout << secondLargest << " " << secondSmallest << endl;
}
 // O(N) , (1) {Single pass solution} {using recursion}
int main() {
    int arr[]={1,4,2,3,5};
    int n=sizeof(arr)/sizeof(arr[0]);
    brute(arr, n);
    better(arr, n);
    optimal(arr, n);
    return 0;
}