#include <bits/stdc++.h>
using namespace std;
vector<int> brute(vector<int> & arr, int n) {
    vector<int> pos;
    vector<int> neg;
    for(int i=0; i<n; i++) {
        if(arr[i]>0) pos.push_back(arr[i]);
        else neg.push_back(arr[i]);
    }
    for(int i=0; i<n/2; i++) {
        arr[2*i]=pos[i];
        arr[2*i+1]=neg[i];
    }
    return arr;
}
vector<int> optimal(vector<int> & arr, int n) {
    vector<int> temp(n,0);
    int posIndex=0, negIndex=1;
    for(int i=0; i<n; i++) {
        if(arr[i]<0) {
            temp[negIndex]=arr[i];    
            negIndex+=2;
        }
        else {
            temp[posIndex]=arr[i];
            posIndex+=2;
        }
    }
    return temp;
}
int main() {
    vector<int> arr={7,-1,5,-3,-4,6};
    int n=arr.size();
    vector<int> temp1=brute(arr, n);
    vector<int> temp2=optimal(arr, n);
    for(auto & it:temp1) cout << it << " ";
    cout << endl;
    for(auto & it:temp2) cout << it << " ";
    return 0;
}
