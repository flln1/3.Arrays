#include <bits/stdc++.h>
using namespace std;
void brute(int arr[], int n, int k) {
    int temp[n]={0};
    if(n==0) return;
    k=k%n;
    for(int i=0; i<n; i++) {
        temp[i]=arr[i+k];
    }
    for(int i=0; i<k; i++) {
        temp[n-k+i]=arr[i];
    }
    for(int i=0; i<n; i++) cout << temp[i] << " ";
    cout << endl;
}
void loop(int arr[], int start, int end) {
    while(start<=end) {
        int temp=arr[start];
        arr[start]=arr[end];
        arr[end]=temp;
        start++;
        end--;
    }
}
void optimal(int arr[], int n, int k) {     //REVERSINIG ALGORITHM-for rotating left, reverse first k ele, then reverse next n-k ele, then reverse complete array. For rotating right reverse first n-k ele, then next k ele, then reverse array.
    if(n==0) return;
    k=k%n;
    loop(arr, 0, k-1);
    loop(arr, k, n-1);
    loop(arr, 0, n-1);
    for(int i=0; i<n; i++) cout << arr[i] << " ";
}
int main() {
    int arr[]={1,2,4,4,5};
    int n=sizeof(arr)/sizeof(arr[0]);
    int k=2;
    brute(arr, n, k);
    optimal(arr, n, k);
    return 0;
}